[{"C:\\Users\\User\\React-app\\my-app\\src\\index.js":"1","C:\\Users\\User\\React-app\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\User\\React-app\\my-app\\src\\App.js":"3","C:\\Users\\User\\React-app\\my-app\\src\\Components\\MainComponent.js":"4","C:\\Users\\User\\React-app\\my-app\\src\\redux\\configureStore.js":"5","C:\\Users\\User\\React-app\\my-app\\src\\redux\\dishes.js":"6","C:\\Users\\User\\React-app\\my-app\\src\\redux\\promotions.js":"7","C:\\Users\\User\\React-app\\my-app\\src\\redux\\leaders.js":"8","C:\\Users\\User\\React-app\\my-app\\src\\redux\\comments.js":"9","C:\\Users\\User\\React-app\\my-app\\src\\shared\\leaders.js":"10","C:\\Users\\User\\React-app\\my-app\\src\\shared\\promotions.js":"11","C:\\Users\\User\\React-app\\my-app\\src\\shared\\comments.js":"12","C:\\Users\\User\\React-app\\my-app\\src\\redux\\ActionTypes.js":"13","C:\\Users\\User\\React-app\\my-app\\src\\Components\\DishdetailComponent.js":"14","C:\\Users\\User\\React-app\\my-app\\src\\Components\\HomeComponent.js":"15","C:\\Users\\User\\React-app\\my-app\\src\\Components\\ContactComponent.js":"16","C:\\Users\\User\\React-app\\my-app\\src\\Components\\MenuComponents.js":"17","C:\\Users\\User\\React-app\\my-app\\src\\Components\\HeaderComponent.js":"18","C:\\Users\\User\\React-app\\my-app\\src\\Components\\FooterComponent.js":"19","C:\\Users\\User\\React-app\\my-app\\src\\Components\\AboutComponent.js":"20","C:\\Users\\User\\React-app\\my-app\\src\\redux\\ActionCreators.js":"21","C:\\Users\\User\\React-app\\my-app\\src\\shared\\dishes.js":"22","C:\\Users\\User\\React-app\\my-app\\src\\Components\\LoadingComponent.js":"23","C:\\Users\\User\\React-app\\my-app\\src\\redux\\forms.js":"24"},{"size":643,"mtime":1610190336700,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1609734030279,"results":"27","hashOfConfig":"26"},{"size":508,"mtime":1610617082150,"results":"28","hashOfConfig":"26"},{"size":2707,"mtime":1610695265423,"results":"29","hashOfConfig":"26"},{"size":709,"mtime":1610695165661,"results":"30","hashOfConfig":"26"},{"size":517,"mtime":1610657298623,"results":"31","hashOfConfig":"26"},{"size":168,"mtime":1610617440604,"results":"32","hashOfConfig":"26"},{"size":158,"mtime":1610617482662,"results":"33","hashOfConfig":"26"},{"size":427,"mtime":1610630698378,"results":"34","hashOfConfig":"26"},{"size":2382,"mtime":1610340647318,"results":"35","hashOfConfig":"26"},{"size":445,"mtime":1610340629381,"results":"36","hashOfConfig":"26"},{"size":4280,"mtime":1610340616201,"results":"37","hashOfConfig":"26"},{"size":178,"mtime":1610642960262,"results":"38","hashOfConfig":"26"},{"size":6418,"mtime":1610658369388,"results":"39","hashOfConfig":"26"},{"size":1179,"mtime":1610648739496,"results":"40","hashOfConfig":"26"},{"size":9126,"mtime":1610695404454,"results":"41","hashOfConfig":"26"},{"size":2050,"mtime":1610648082609,"results":"42","hashOfConfig":"26"},{"size":4600,"mtime":1610567873977,"results":"43","hashOfConfig":"26"},{"size":2660,"mtime":1610223739586,"results":"44","hashOfConfig":"26"},{"size":4267,"mtime":1610395375688,"results":"45","hashOfConfig":"26"},{"size":725,"mtime":1610658164245,"results":"46","hashOfConfig":"26"},{"size":1485,"mtime":1610340491621,"results":"47","hashOfConfig":"26"},{"size":218,"mtime":1610644110594,"results":"48","hashOfConfig":"26"},{"size":140,"mtime":1610694864784,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"wx875d",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\React-app\\my-app\\src\\index.js",[],["101","102"],"C:\\Users\\User\\React-app\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\App.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\Components\\MainComponent.js",["103","104"],"C:\\Users\\User\\React-app\\my-app\\src\\redux\\configureStore.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\redux\\dishes.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\redux\\promotions.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\redux\\leaders.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\redux\\comments.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\shared\\leaders.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\shared\\promotions.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\shared\\comments.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\redux\\ActionTypes.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\Components\\DishdetailComponent.js",["105","106","107","108"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardTitle, CardBody, Breadcrumb, BreadcrumbItem, Row, Col, Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { LocalForm, Errors, Control } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\n\r\n\r\n\r\nconst maxLength=(len)=>(val)=> !(val) || (val.length<=len);\r\nconst minLength=(len)=>(val)=> val && (val.length>len);\r\n\r\n    class  CommentForm extends Component{\r\n\r\n      constructor(props){\r\n        super(props);\r\n        this.state={\r\n          isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal=this.toggleModal.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n\r\n      }\r\n\r\n      toggleModal(){\r\n            this.setState({\r\n                isModalOpen:!this.state.isModalOpen\r\n            });\r\n      }\r\n\r\n      handleSubmit(values){\r\n          this.toggleModal();\r\n          this.props.addComment(this.props.dishId, values.rate, values.author, values.com);\r\n      }\r\n\r\n\r\n      render(){\r\n        return(\r\n          <React.Fragment>\r\n                    <Button outline onClick={this.toggleModal}>\r\n              <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n          </Button>\r\n         \r\n          \r\n          <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}> Submit Comment </ModalHeader>\r\n          <ModalBody>\r\n          <div className=\"m-2\">\r\n            <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                 \r\n                <Label htmlFor=\"rate\"> Rating</Label>\r\n                \r\n                <Control.select model=\".rate\" id=\"rate\" name=\"rate\" className=\"form-control\">\r\n                 <option>1</option>\r\n                  <option>2</option>\r\n                  <option>3</option>\r\n                  <option>4</option>\r\n                  <option>5</option>\r\n                </Control.select>\r\n                \r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n              \r\n                <Label htmlFor=\"author\">Your Name</Label>                \r\n                <Control.text model=\".author\" id=\"author\" name=\"author\" className=\"form-control\"\r\n                validators={{maxLength:maxLength(15), minLength:minLength(2)}}  />\r\n                <Errors \r\n                className=\"text-danger\"\r\n                model=\".author\"\r\n                show=\"touched\"\r\n                messages={{\r\n                  maxLength:'Must be 15 characters or less',\r\n                  minLength:'Must be greater than 2 characters'\r\n                }} />\r\n               \r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n              \r\n                <Label htmlFor=\"com\"> Comment</Label>                \r\n                <Control.textarea model=\".com\" id=\"com\" name=\"comm\" rows=\"6\" className=\"form-control\"/>\r\n                \r\n              </Row>\r\n              \r\n              <Row className=\"form-group\">\r\n                           \r\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                           \r\n              </Row>\r\n            </LocalForm>\r\n            </div>\r\n\r\n          </ModalBody>\r\n          </Modal>\r\n          \r\n          </React.Fragment>\r\n\r\n          );\r\n      }\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n\r\n    function RenderDish({dish}){\r\n\r\n        if(dish.isLoading){\r\n          return(\r\n              <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(dish.errMess){\r\n          return(\r\n               <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{dish.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if( dish!= null)\r\n          return(\r\n            <Card>\r\n              <CardImg top src={dish.image} alt={dish.name}/>\r\n              <CardBody>\r\n                 <CardTitle>{dish.name}</CardTitle>\r\n                 <CardText>{dish.description}</CardText>\r\n              </CardBody>\r\n              </Card>\r\n          ); \r\n        else return (\r\n          <div></div>\r\n          );\r\n\r\n      }\r\n\r\n\r\n\r\n   function RenderComments({comm, addComment, dishId }){\r\n     const comment= comm.map((select)=>{return(\r\n        \r\n                  <ul className=\"list-unstyled\">                \r\n                    <div className=\"mt-3\">\r\n                     <li> {select.comment} </li>\r\n                     </div>\r\n                     <div className=\"mt-3\">\r\n                     <li> -- {select.author} , {new Intl.DateTimeFormat('en-US',{year:'numeric', month:'short', day:'2-digit'}).format(new Date(Date.parse(select.date)))}</li>\r\n\r\n                    </div>            \r\n                  </ul>\r\n\r\n\r\n\r\n              );\r\n            });\r\n      if(comm!=null){      \r\n        \r\n      \r\n        return(\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n             \r\n                 {comment}\r\n           \r\n\r\n            </div>\r\n            <div className=\"row mt-1\">\r\n            <CommentForm addComment={addComment} dishId={dishId} />\r\n            </div>\r\n\r\n</div>\r\n\r\n            );}   \r\n\r\n             else return (\r\n            \r\n            <div></div>        \r\n\r\n        );       \r\n\r\n    }\r\n\r\n\r\n    const DishDetail=(props) => {\r\n\r\n      return(\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                <BreadcrumbItem>DishDetail</BreadcrumbItem>\r\n                </Breadcrumb>\r\n            </div>\r\n            <div className=\"row\">\r\n            <div className=\"col-12 col-md-5 mt-1\">\r\n                   <RenderDish dish={props.dish}/>\r\n              </div>\r\n              <div className=\"col-12 col-md-5 mt-1\">  \r\n                  <h4>Comments</h4>            \r\n                  <RenderComments comm={props.comment} addComment={props.addComment} dishId={props.dish.id} />\r\n              </div>\r\n            </div>\r\n               \r\n            </div>\r\n      \t);\r\n\r\n\r\n    }\r\n    \r\n\r\n\r\n\r\nexport default DishDetail;\r\n\r\n\r\n","C:\\Users\\User\\React-app\\my-app\\src\\Components\\HomeComponent.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\Components\\ContactComponent.js",["109","110","111","112","113","114","115","116","117"],"C:\\Users\\User\\React-app\\my-app\\src\\Components\\MenuComponents.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\Components\\HeaderComponent.js",["118"],"import React, { Component } from 'react';\r\nimport { Navbar, NavbarToggler, Nav, Collapse, NavItem, NavbarBrand, Jumbotron, FormGroup, Form, Col, Input, Modal, ModalBody, ModalHeader, Label, Button } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tisNavOpen:false,\r\n            isModalOpen:false\r\n\t\t};\r\n\t\tthis.toggleNav=this.toggleNav.bind(this);\r\n        this.toggleModal=this.toggleModal.bind(this);\r\n        this.handleLogin=this.handleLogin.bind(this);\r\n\t}\r\n\r\n\ttoggleNav(){\r\n\t\tthis.setState({\r\n\t\t\tisNavOpen:!this.state.isNavOpen\r\n\t\t});\r\n\t}\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen:!this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"UserName:\"+this.username.value+ \" Password:\" + this.password.value + \" Remember:\"+this.confirm.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n\trender(){\r\n\r\n\t\treturn(\r\n          \r\n          <React.Fragment>\r\n          \t\t<Navbar dark expand=\"md\">\r\n          \t\t\t<div className=\"container\">\r\n          \t\t\t\t<NavbarToggler onClick={this.toggleNav} />\r\n            \t\t\t<NavbarBrand className=\"mr-auto\" href=\"/\">\r\n            \t\t\t<img src=\"./dine.jpg\" height=\"30\" width=\"41\" alt=\"restaurant confusion\" />\r\n            \t\t\t</NavbarBrand>\r\n            \t\t\t<Collapse isOpen={this.state.isNavOpen} navbar>\r\n            \t\t\t<Nav navbar>\r\n            \t\t\t\t<NavItem>\r\n            \t\t\t\t<NavLink className=\"nav-link\" to=\"/home\">\r\n            \t\t\t\t<span className=\"fa fa-home fa-lg\" ></span>Home\r\n            \t\t\t\t</NavLink>\r\n            \t\t\t\t</NavItem>\r\n\r\n            \t\t\t\t<NavItem>\r\n            \t\t\t\t<NavLink className=\"nav-link\" to=\"/aboutus\">\r\n            \t\t\t\t<span className=\"fa fa-info fa-lg\" ></span>About Us\r\n            \t\t\t\t</NavLink>\r\n            \t\t\t\t</NavItem>\r\n\r\n            \t\t\t\t<NavItem>\r\n            \t\t\t\t<NavLink className=\"nav-link\" to=\"/menu\">\r\n            \t\t\t\t<span className=\"fa fa-list fa-lg\" ></span>Menu\r\n            \t\t\t\t</NavLink>\r\n            \t\t\t\t</NavItem>\r\n\r\n            \t\t\t\t<NavItem>\r\n            \t\t\t\t<NavLink className=\"nav-link\" to=\"/contactus\">\r\n            \t\t\t\t<span className=\"fa fa-phone fa-lg\" ></span>Contact Us\r\n            \t\t\t\t</NavLink>\r\n            \t\t\t\t</NavItem>\r\n            \t\t\t</Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <Button outline onClick={this.toggleModal}>\r\n                                <span className=\"fa fa-sign-in fa-lg\"></span>Login\r\n                            </Button>\r\n                        </Nav>\r\n            \t\t\t</Collapse>\r\n          \t\t\t</div>\r\n        \t\t</Navbar>\r\n\r\n        \t\t<Jumbotron>\r\n        \t\t \t<div className=\"container\">\r\n        \t\t \t\t<div className=\"row row-header\">\r\n        \t\t \t\t\t<div className=\"col-12 col-sm-6\">\r\n        \t\t \t\t\t\t<h1>Restaurant Confusion</h1>\r\n        \t\t \t\t\t\t<p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n        \t\t \t\t\t</div>\r\n        \t\t \t\t</div>\r\n        \t\t \t</div>\r\n        \t\t</Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Login\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n\r\n                        <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">UserName</Label>\r\n                            <Input type=\"text\" name=\"username\" innerRef={(input)=> this.username=input} />\r\n                        </FormGroup>\r\n\r\n                         <FormGroup>\r\n                            <Label htmlFor=\"pwd\">Password</Label>\r\n                            <Input type=\"password\" name=\"pwd\" innerRef={(input)=> this.password=input}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" name=\"confirm\" innerRef={(input)=> this.confirm=input} />{''} Remember me\r\n                            </Label>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Button type=\"submit\" color=\"primary\">Login</Button>\r\n                        </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n          </React.Fragment>\r\n  \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;","C:\\Users\\User\\React-app\\my-app\\src\\Components\\FooterComponent.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\Components\\AboutComponent.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\redux\\ActionCreators.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\shared\\dishes.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\Components\\LoadingComponent.js",[],"C:\\Users\\User\\React-app\\my-app\\src\\redux\\forms.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":9,"column":35,"nodeType":"125","messageId":"126","endLine":9,"endColumn":45},{"ruleId":"127","severity":1,"message":"128","line":38,"column":1,"nodeType":"129","messageId":"130","endLine":40,"endColumn":2},{"ruleId":"123","severity":1,"message":"131","line":2,"column":89,"nodeType":"125","messageId":"126","endLine":2,"endColumn":92},{"ruleId":"132","severity":1,"message":"133","line":54,"column":17,"nodeType":"134","endLine":54,"endColumn":94},{"ruleId":"132","severity":1,"message":"135","line":67,"column":17,"nodeType":"134","endLine":68,"endColumn":83},{"ruleId":"132","severity":1,"message":"136","line":83,"column":17,"nodeType":"134","endLine":83,"endColumn":104},{"ruleId":"123","severity":1,"message":"137","line":4,"column":33,"nodeType":"125","messageId":"126","endLine":4,"endColumn":40},{"ruleId":"138","severity":1,"message":"139","line":60,"column":25,"nodeType":"134","endLine":60,"endColumn":67},{"ruleId":"132","severity":1,"message":"135","line":75,"column":33,"nodeType":"134","endLine":77,"endColumn":109},{"ruleId":"132","severity":1,"message":"135","line":96,"column":33,"nodeType":"134","endLine":97,"endColumn":107},{"ruleId":"132","severity":1,"message":"135","line":115,"column":33,"nodeType":"134","endLine":116,"endColumn":93},{"ruleId":"132","severity":1,"message":"135","line":134,"column":33,"nodeType":"134","endLine":135,"endColumn":70},{"ruleId":"132","severity":1,"message":"140","line":152,"column":41,"nodeType":"134","endLine":152,"endColumn":117},{"ruleId":"132","severity":1,"message":"133","line":158,"column":33,"nodeType":"134","endLine":158,"endColumn":114},{"ruleId":"132","severity":1,"message":"136","line":167,"column":33,"nodeType":"134","endLine":167,"endColumn":132},{"ruleId":"123","severity":1,"message":"131","line":2,"column":98,"nodeType":"125","messageId":"126","endLine":2,"endColumn":101},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Col' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]